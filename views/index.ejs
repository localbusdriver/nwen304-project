<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRUD App</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-regular-rounded/css/uicons-regular-rounded.css'>
    <link rel='stylesheet' href='https://cdn-uicons.flaticon.com/uicons-solid-rounded/css/uicons-solid-rounded.css'>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
    <style>
 @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');

 * {
     margin: 0;
     padding: 0;
     box-sizing: border-box;
     font-family: 'Poppins', sans-serif;
     user-select: none;
 }

 body {
     height: 100vh;
     display: flex;
     align-items: center;
     justify-content: center;
     background: #e1e1e1;
 }

 .product-card {
    position: relative;
    width: 500px;  
    height: 680px;  
    border-radius: 18px;
    padding: 20px 30px 30px 30px;
    background: #e1e1e1;
    box-shadow:
        -28px 27px 37.5px rgba(0, 0, 0, 0.53),
        10px -19px 37.5px rgba(255, 255, 255, 0.038),
        inset 4px -4px 8px rgb(0, 0, 0, 0.53),
        inset -5px 5px 12px #ffffff;
    z-index: 3;
    overflow: hidden;
}



 .product-card .logo-cart {
     display: flex;
     align-items: center;
     justify-content: space-between;
 }

 .product-card .logo-cart .back i {
     font-size: 20px;
     color: #0899ee;
     cursor: pointer;
     transition: color 0.3 ease;
     text-shadow: -5px 3px 4px rgba(0, 0, 0, 0.431);
 }

 .product-card .logo-cart .back span {
     font-size: 22px;
     font-weight: 600;
     margin-left: 9px;
     color: #404040;
 }

 .product-card .logo-cart i {
     font-size: 28px;
     color: #0899ee;
     cursor: pointer;
     transition: color 0.3 ease;
     text-shadow: -5px 3px 4px rgba(0, 0, 0, 0.431);

 }

 .product-card .logo-cart i:hover {
     color: #333;
 }

 .product-card .main-images {
     position: relative;
     height: 400px;
 }


 .product-card .main-images img {
     position: absolute;
     height: 270px;
     width: 300px;
     object-fit: cover;
     left: 62px;
     top: 35px;
     border-radius: 25px;
     z-index: 1;
     opacity: 0;
     transition: transform 0.5s ease;
     box-shadow:
         -13px 20px 20px rgb(51 51 51 / 59%);
 }

 .product-card .main-images img.active {
     opacity: 1;
     transform: scale(1.1);
 }

 .product-card .shows-details .shows_name {
     font-size: 24px;
     font-weight: bolder;
     color: #3d3d3d;
     user-select: none;
 }

 .product-card .color-price .color-option {
     display: flex;
     align-items: center;
 }

 .color-price {
     display: flex;
     justify-content: space-between;
     align-items: center;
     margin-top: 10px;
 }

 .color-price .color-option .color {
     font-size: 18px;
     font-weight: bold;
     color: #3d3d3d;
     margin-right: 8px;
 }

 .color-option .circles {
     display: flex;
     align-items: center;
 }

 .color-option .circles .circle {
     width: 18px;
     height: 18px;
     background: #fff;
     border-radius: 50%;
     margin: 0 6px;
     cursor: pointer;
     transition: all 0.4s ease;
     box-shadow:
         inset 4px -4px 5px rgb(0 0 0 / 49%),
         -5px 5px 10px rgb(0 0 0 /70%);
 }

 .color-option .circles .circle.white.active {
     height: 24px;
     width: 24px;
     background: #fff;
     box-shadow:
         inset 5px -4px 6px rgb(0 0 0 / 39%),
         -10px 10px 15px rgb(0 0 0 /49%);
 }

 .color-option .circles .circle.blue {
     background: #2f68f6;
 }

 .color-option .circles .circle.blue.active {
     height: 24px;
     width: 24px;
     background: #2f68f6;
     box-shadow:
         inset 5px -4px 6px rgb(0 0 0 / 50%),
         -10px 10px 15px rgb(0 0 0 /49%);
 }

 .color-option .circles .circle.black {
     background: #3d3d3d;
 }

 .color-option .circles .circle.black.active {
     height: 24px;
     width: 24px;
     background: #3d3d3d;
     box-shadow:
         inset 5px -4px 6px rgb(0 0 0 / 50%),
         -10px 10px 15px rgb(0 0 0 /49%);
 }

 .color-price .price {
     display: flex;
     flex-direction: column;
     justify-content: center;
     align-items: center;
 }

 .color-price .price .price_num {
     font-size: 30px;
     font-weight: 700;
     color: #3d3d3d;
 }

 .product-card .button button {
     height: 60px;
     width: 80%;
     border-radius: 50px;
     margin: 34px;
     background: #0899ee;
     outline: none;
     border: none;
     font-size: 22px;
     font-weight: 600;
     color: #e2e2e1;
     transition: all 0.4s ease;
     text-shadow:
         2px 2px 4px rgba(46, 46, 46, 0.949),
         -2px -2px 4px #70bcff;
     box-shadow:
         inset 2px -3px 3px 0px rgb(5 78 127),
         -5px 4px 7px 0 rgb(0 0 0 / 75%),
         3px -4px 10px 1px rgb(255 255 255);
 }

 button:hover {
     transform: translateY(-5px) !important;
 }


.filter-form {
    margin-bottom: 20px;
    position: sticky;
    top: 0;
    z-index: 1000;
}

.row {
    margin-top: 0;
}

.container {
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;  
    align-items: center; 
    margin-top: 0; 
}

@import url('https://fonts.googleapis.com/css?family=Poppins:200,300,400,500,600,700,800,900&display=swap');
*
{
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: 'Poppins', sans-serif;
}
body 
{
	min-height: 100vh;
	background: #474f59;
}
.navigation 
{
	position: absolute;
	left: 0;
	width: 100px;
	height: 100%;
	background: #2f363e;
	box-shadow: 25px 25px 75px rgba(0,0,0,0.25),
	10px 10px 70px rgba(0,0,0,0.25),
	inset 5px 5px 10px rgba(0,0,0,0.5),
	inset 5px 5px 20px rgba(255,255,255,0.2),
	inset -5px -5px 15px rgba(0,0,0,0.75);
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	gap: 10px;
}
.navigation li 
{
	position: relative;
	list-style: none;
	width: 80px;
	height: 80px;
	display: flex;
	justify-content: center;
	margin: 0 5px;
}
.navigation li::before 
{
	content: '';
	position: absolute;
	top: calc(50% - 2.5px);
	left: 20px;
	width: 5px;
	height: 5px;
	border-radius: 50%;
	transition: 0.5s;
}
.navigation li.active::before 
{
	background: #0f0;
	box-shadow: 0 0 5px #0f0,
	0 0 10px #0f0,
	0 0 20px #0f0,
	0 0 30px #0f0,
	0 0 40px #0f0,
	0 0 50px #0f0;
}
.navigation li a 
{
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	text-decoration: none;
}
.navigation li a .icon 
{
	position: absolute;
	font-size: 1.75em;
	width: 80px;
	height: 80px;
	color: #aaa;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
	transition: 0.5s;
	transition-delay: 0.2s;
}
.navigation li:hover a .icon 
{
	color: #29fd53;
}
.navigation li.active a .icon 
{
	transform: translateX(45px);
	background: #29fd53;
	color: #fff;
	box-shadow: 5px 5px 7px rgba(0,0,0,0.25),
	inset 2px 2px 3px rgba(255,255,255,0.25),
	inset -3px -3px 5px rgba(0,0,0,0.5);
	transition-delay: 0s;
}
.navigation li a .icon::before 
{
	content: '';
	position: absolute;
	inset: 10px;
	background: #2f363e;
	border-radius: 50%;
	box-shadow: 5px 5px 5px rgba(0,0,0,0.5),
	inset 2px 2px 3px rgba(255,255,255,0.25),
	inset -3px -3px 5px rgba(0,0,0,0.5);
	transform: scale(0);
	transition: 0.5s;
}
.navigation li.active a .icon::before  
{
	transform: scale(1);
}
.navigation li a .text 
{
	position: absolute;
	left: 80px;
	font-size: 1.25em;
	background: #29fd53;
	color: #2f363e;
	padding: 4px 15px;
	border-radius: 15px;
	box-shadow: 5px 5px 7px rgba(0,0,0,0.25),
	inset -3px -3px 5px rgba(0,0,0,0.5);
	opacity: 0;
	visibility: hidden;
	transition: 0.5s;
}
.navigation li a .text::before 
{
	content: '';
	position: absolute;
	top: 50%;
	left: -4px;
	transform: translateY(-50%) rotate(45deg);
	width: 10px;
	height: 10px;
	background: #29fd53;
}
.navigation li:hover a .text 
{

	left: 100px;
	opacity: 1;
	visibility: visible;
}
.navigation li.active:hover a .text 
{
	left: 140px;
	opacity: 1;
	visibility: visible;
}



    </style>
</head>

<body>
    <div class="container mt-5">
        <form action="/items" method="get" class="mb-3 filter-form">         
            <div class="form-row">
                <div class="col">
                    <input type="text" name="name" placeholder="Search by name" class="form-control">
                </div>
                <div class="col">
                    <input type="number" name="minPrice" placeholder="Min price" class="form-control">
                </div>
                <div class="col">
                    <input type="number" name="maxPrice" placeholder="Max price" class="form-control">
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-secondary">Filter</button>
                </div>
            </div>
            <div class="mt-4">
                <a href="/checkout" class="btn btn-success">Go to Checkout</a>
            </div>
        </form>

        <div class="row"> 
        <% items.forEach(item => { %>
            <div class="product-card">
                <div class="logo-cart">
                    <i class="fi fi-rr-shopping-cart"></i>
                </div>
    
                <div class="main-images">
                    <img id="white" class="white active" src="<%= item.images.white %>" alt="<%= item.name %>">
                    <img id="blue" class="blue" src="<%= item.images.blue %>" alt="<%= item.name %>">
                    <img id="black" class="black" src="<%= item.images.black %>" alt="<%= item.name %>">
                </div>
                
    
                <div class="shows-details">
                    <span class="shows_name"><%= item.name %></span>
                </div>
    
                <div class="color-price">
                    <div class="color-option">
                        <span class="color">color</span>
                        <div class="circles">
                            <span class="circle white active" id="white"></span>
                            <span class="circle blue" id="blue"></span>
                            <span class="circle black" id="black"></span>
                        </div>
                    </div>
                    <div class="price">
                        <span class="price_num">$<%= item.price %></span>
                    </div>
                </div>
    
                <div class="button">
                    <form action="/add-to-cart/<%= item._id %>" method="post">
                        <button data-item-id="<%= item._id %>" data-added="false" class="btn btn-primary add-to-cart-btn">Add to Cart</button>
                    </form>
                </div>
            </div>
            <% }); %>
        </div>
        <ul class="navigation">
            <li class="active">
              <a href="index.html">
                <span class="icon"><ion-icon name="home-outline"></ion-icon></span>
                <span class="text">Home Page</span>
              </a>
            </li>
            <li>
              <a href="memberonly.html">
                <span class="icon"><ion-icon name="person-outline"></ion-icon></span>
                <span class="text">Member Page</span>
              </a>
            </li>
            <li>
              <a href="login.html">
                <span class="icon"><ion-icon name="log-in-outline"></ion-icon></span>
                <span class="text">Login Page</span>
              </a>
            </li>
            <li>
              <a href="checkout">
                <span class="icon"><ion-icon name="cart-outline"></ion-icon></span>
                <span class="text">Checkout Page</span>
              </a>
            </li>
          </ul>

        <script>
            let colorOptions = document.querySelectorAll(".color-option");

            colorOptions.forEach(circle => {
                circle.addEventListener("click", (e) => {
                    let target = e.target;
                    if (target.classList.contains("circle")) {
                        circle.querySelector(".active").classList.remove("active");
                        target.classList.add("active");
                        let mainImages = circle.closest(".product-card").querySelector(".main-images");
                        mainImages.querySelector(".active").classList.remove("active");
                        mainImages.querySelector(`.${target.id}`).classList.add("active");
                    }
                });
            });
    
            //Animation
            gsap.from(".logo-cart",
                {
                    opacity: 0,
                    duration: 1,
                    delay: 0.8,
                    y: -25,
                    ease: "expo.out",
                    stagger: 0.2,
    
                });
    
            gsap.from(".main-images",
                {
                    opacity: 0,
                    duration: 2,
                    delay: 1,
                    y: -25,
                    ease: "expo.out",
                    stagger: 0.2,
    
                });
            gsap.from(".shows_name",
                {
                    opacity: 0,
                    duration: 2,
                    delay: 1.5,
                    y: -25,
                    ease: "expo.out",
                    stagger: 0.2,
    
                });
            gsap.from(".color-price",
                {
                    opacity: 0,
                    duration: 1.8,
                    delay: 1.8,
                    y: -25,
                    ease: "expo.out",
                    stagger: 0.2,
    
                });
            gsap.from(".button",
                {
                    opacity: 0,
                    duration: 2,
                    delay: 2,
                    y: 25,
                    ease: "expo.out",
                    stagger: 0.2,
    
                });
                $(document).ready(function() {
                    $.get('/is-logged-in', function(data) {
                        if (!data.loggedIn) {
                            $('.button').hide();  //If user is not logged in set button as hidden
                        }
                    });
                });


                
    
        </script>
        <script>
            document.addEventListener("DOMContentLoaded", function() {
                const addToCartButtons = document.querySelectorAll(".add-to-cart-btn");
            
                addToCartButtons.forEach(button => {
                    button.addEventListener("click", function(event) {
                        event.preventDefault();  
            
                        const itemId = button.dataset.itemId;
                        const isAddedToCart = button.getAttribute('data-added') === 'true'; // Check if the item is added to the cart
            
                        if (isAddedToCart) {
                            // If the item is already in the cart, remove it
                            fetch(`/remove-from-cart/${itemId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    alert("Item has been removed from cart!");
                                    button.innerText = "Add to Cart";  // Change the button text
                                    button.setAttribute('data-added', 'false'); // Update the button state
                                } else {
                                    alert("Error removing item from cart.");
                                }
                            })
                            .catch(error => {
                                console.error("There was a problem with the fetch operation:", error.message);
                                alert("Error removing item from cart.");
                            });
            
                        } else {
                            // If the item is not in the cart, add it
                            fetch(`/add-to-cart/${itemId}`, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                }
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    alert("Item added to cart!");
                                    button.innerText = "Added to Cart";  // Change the button text
                                    button.setAttribute('data-added', 'true'); // Update the button state
                                } else {
                                    alert("Error adding item to cart.");
                                }
                            })
                            .catch(error => {
                                console.error("There was a problem with the fetch operation:", error.message);
                                alert("Error adding item to cart.");
                            });
                        }
                    });
                });
            });

            
            
        </script>
        <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
        <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
        <script>
            let list = document.querySelectorAll('.navigation li');
            function activeLink(){
            list.forEach((item) => 
            item.classList.remove('active'));
            this.classList.add('active')
            }
            list.forEach((item) =>
            item.addEventListener('click',activeLink));
        </script>
</body>

</html>
